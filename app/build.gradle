apply plugin: 'com.android.application'
//该 model 为一个 com.android.application 程序，也就是应用程序，如果你的 Model 是一个库，那么自然也就是apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    //默认配置
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    buildTypes {
        release {
            // 是否进行混淆
            minifyEnabled false
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

//add for logger
repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

//依赖管理 可以添加远程依赖 和 本地依赖libs等
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile project(':library')
    compile rootProject.ext.dependencies.design
    compile rootProject.ext.dependencies.cardview
    compile rootProject.ext.dependencies.circleimageview
    compile rootProject.ext.dependencies.sufficientlysecure
    compile rootProject.ext.dependencies.logger
}
